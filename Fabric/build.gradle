plugins {
    id 'fabric-loom' version '1.0-SNAPSHOT'
    id 'maven-publish'
    id 'idea'
}

archivesBaseName = "${mod_id}-fabric"
version = "${mod_version}-${minecraft_version}"

sourceSets {
    testMod {
        compileClasspath += main.compileClasspath
        runtimeClasspath += main.runtimeClasspath
        compileClasspath += test.compileClasspath
        runtimeClasspath += test.runtimeClasspath
    }
}

repositories {
    maven {
        url "https://maven.terraformersmc.com/"
    }
}

dependencies {
    minecraft "com.mojang:minecraft:${minecraft_version}"
    mappings loom.officialMojangMappings()
    modImplementation "net.fabricmc:fabric-loader:${fabric_loader_version}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${fabric_version}"
    modImplementation "com.terraformersmc:modmenu:5.0.2"

    // Framework
    modImplementation "com.mrcrayfish:framework-fabric:${minecraft_version}-${framework_version}"

    // JEI
    modCompileOnlyApi "mezz.jei:jei-${minecraft_version}-common-api:${jei_version}"
    modCompileOnlyApi "mezz.jei:jei-${minecraft_version}-fabric-api:${jei_version}"
    modRuntimeOnly "mezz.jei:jei-${minecraft_version}-fabric:${jei_version}"

    // Night Config
    implementation include('com.electronwill.night-config:core:3.6.0')
    implementation include('com.electronwill.night-config:toml:3.6.0')

    implementation group: 'com.google.code.findbugs', name: 'jsr305', version: '3.0.1'
    implementation project(":Common")
    testModImplementation sourceSets.main.output
    testModImplementation sourceSets.test.output
}

loom {
    accessWidenerPath = file("src/main/resources/configured.accesswidener")
    runs {
        client {
            client()
            setConfigName("Fabric Client")
            ideConfigGenerated(true)
            runDir("run")
        }
        testModClient {
            client()
            setConfigName("Fabric Test Client")
            ideConfigGenerated(true)
            runDir("run")
            setSource(sourceSets.testMod)
        }
        server {
            server()
            setConfigName("Fabric Server")
            ideConfigGenerated(true)
            runDir("run")
        }
    }
}

processResources {
    from project(":Common").sourceSets.main.resources
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand project.properties
    }
}

tasks.withType(JavaCompile) {
    source(project(":Common").sourceSets.main.allSource)
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact remapJar
            artifact sourcesJar
            artifact javadocJar
            groupId project.group
            artifactId project.archivesBaseName
            version project.version
        }
    }

    repositories {
        maven {
            url "file://" + System.getenv("LOCAL_MAVEN")
        }
        maven {
            name = "GitHubPackages"
            url = "https://maven.pkg.github.com/MrCrayfish/Maven"
            credentials {
                username = rootProject.githubCredentials['GITHUB_USERNAME']
                password = rootProject.githubCredentials['GITHUB_TOKEN']
            }
        }
    }
}

loom.disableDeprecatedPomGeneration(publishing.publications.mavenJava)